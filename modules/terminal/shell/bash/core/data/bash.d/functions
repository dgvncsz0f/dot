#!/bin/bash

fg_norm_black='[22;30m'
bg_norm_black='[22;40m'
fg_bold_black='[01;30m'
bg_bold_black='[01;40m'

fg_norm_grey=$fg_norm_black
bg_norm_black=$bg_norm_black
fg_bold_grey=$fg_bold_black
bg_bold_black=$bg_bold_black

fg_norm_red='[22;31m'
bg_norm_red='[22;41m'
fg_bold_red='[01;31m'
bg_bold_red='[01;41m'

fg_norm_magenta='[22;35m'
bg_norm_magenta='[22;45m'
fg_bold_magenta='[01;35m'
bg_bold_magenta='[01;45m'

fg_norm_green='[22;32m'
bg_norm_green='[22;42m'
fg_bold_green='[01;32m'
bg_bold_green='[01;42m'

fg_norm_yellow='[22;33m'
bg_norm_yellow='[22;43m'
fg_bold_yellow='[01;33m'
bg_bold_yellow='[01;43m'

fg_norm_blue='[22;34m'
bg_norm_blue='[22;44m'
fg_bold_blue='[01;34m'
bg_bold_blue='[01;44m'

fg_norm_cyan='[22;36m'
bg_norm_cyan='[22;46m'
fg_bold_cyan='[01;36m'
bg_bold_cyan='[01;46m'

fg_norm_white='[22;37m'
bg_norm_white='[22;47m'
fg_bold_white='[01;37m'
bg_bold_white='[01;47m'

fg_norm_def='[22;39m'
bg_norm_def='[22;49m'
fg_bold_def='[01;39m'
bg_bold_def='[01;49m'

nocolors='[0m'

my_test_interactive ()
{
  [[ $- == *i* ]]
}

my_test_root ()
{
  test "$EUID" -eq 0
}

my_setenv()
{
  test -f /etc/profile && . /etc/profile
  export PAGER=/usr/bin/less
  export GPG_TTY=$(/usr/bin/tty)
  export LANG=en_US.UTF-8
  export LC_ALL=en_US.UTF-8
  export NEWT_MONO=1
  if my_test_interactive
  then
    export PS1="\[$fg_bold_red\]âžœ \[$fg_bold_grey\]|\\u@\\H| \[$fg_norm_cyan\]\\w \\n\[$fg_bold_yellow\]\\$\[$nocolors\] "
  fi
  export HISTFILE=$HOME/.bash_history
  export HISTFILESIZE=10000
  export HISTSIZE=7500
  export HISTCONTROL=ignoredups:erasedups
  export HISTIGNORE=" *"
  export PATH
}

my_x11_copy ()
{
  export MY_X11_FALLBACK=$(cat)
  if [ -n "$DISPLAY" ]
  then
    echo -n "$MY_X11_FALLBACK" | xsel -p
    echo -n "$MY_X11_FALLBACK" | xsel -b
  fi
}

my_x11_yank ()
{
  local tmp size
  if [ -n "$DISPLAY" ]
  then
    tmp=$(xsel -p -o)
    if [ -n "$tmp" ]
    then
      tmp=$(xsel -b -o)
    fi
  else
    tmp=$MY_X11_FALLBACK
  fi
  size=$(echo -n "$tmp" | wc -c)
  READLINE_LINE=${READLINE_LINE:0:$READLINE_POINT}${tmp}${READLINE_LINE:$READLINE_POINT}
  READLINE_POINT=$(( $READLINE_POINT + $size ))
}

my_kill_whole_line () 
{
  echo -n "${READLINE_LINE}" | my_x11_copy
  READLINE_LINE=""
  READLINE_POINT=0
}

my_kill_line ()
{
  local tmp size
  tmp=${READLINE_LINE:$READLINE_POINT}
  size=$(echo -n "$tmp" | wc -c)
  echo -n "$tmp" | my_x11_copy
  READLINE_LINE=${READLINE_LINE:0:$READLINE_POINT}
}

my_backward_kill_line ()
{
  echo -n "${READLINE_LINE:0:$READLINE_POINT}" | my_x11_copy
  READLINE_LINE=${READLINE_LINE:$READLINE_POINT}
  READLINE_POINT=0
}
